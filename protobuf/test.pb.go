// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package test

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GEOType int32

const (
	GEOType_GEO_TYPE_ADDR GEOType = 0
)

var GEOType_name = map[int32]string{
	0: "GEO_TYPE_ADDR",
}

var GEOType_value = map[string]int32{
	"GEO_TYPE_ADDR": 0,
}

func (x GEOType) String() string {
	return proto.EnumName(GEOType_name, int32(x))
}

func (GEOType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

type DriverCoreData struct {
	DriverID             int64    `protobuf:"varint,1,opt,name=driverID,proto3" json:"driverID,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DriverCoreData) Reset()         { *m = DriverCoreData{} }
func (m *DriverCoreData) String() string { return proto.CompactTextString(m) }
func (*DriverCoreData) ProtoMessage()    {}
func (*DriverCoreData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *DriverCoreData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriverCoreData.Unmarshal(m, b)
}
func (m *DriverCoreData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriverCoreData.Marshal(b, m, deterministic)
}
func (m *DriverCoreData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriverCoreData.Merge(m, src)
}
func (m *DriverCoreData) XXX_Size() int {
	return xxx_messageInfo_DriverCoreData.Size(m)
}
func (m *DriverCoreData) XXX_DiscardUnknown() {
	xxx_messageInfo_DriverCoreData.DiscardUnknown(m)
}

var xxx_messageInfo_DriverCoreData proto.InternalMessageInfo

func (m *DriverCoreData) GetDriverID() int64 {
	if m != nil {
		return m.DriverID
	}
	return 0
}

func (m *DriverCoreData) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

var E_GeoType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*GEOType)(nil),
	Field:         50002,
	Name:          "geo_type",
	Tag:           "varint,50002,opt,name=geo_type,enum=GEOType",
	Filename:      "test.proto",
}

func init() {
	proto.RegisterEnum("GEOType", GEOType_name, GEOType_value)
	proto.RegisterType((*DriverCoreData)(nil), "DriverCoreData")
	proto.RegisterExtension(E_GeoType)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0x52, 0x48, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07,
	0xf3, 0x92, 0x4a, 0xd3, 0xf4, 0x53, 0x52, 0x8b, 0x93, 0x8b, 0x32, 0x0b, 0x4a, 0xf2, 0x8b, 0x20,
	0x2a, 0x94, 0x7c, 0xb8, 0xf8, 0x5c, 0x8a, 0x32, 0xcb, 0x52, 0x8b, 0x9c, 0xf3, 0x8b, 0x52, 0x5d,
	0x12, 0x4b, 0x12, 0x85, 0xa4, 0xb8, 0x38, 0x52, 0xc0, 0x22, 0x9e, 0x2e, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0xcc, 0x41, 0x70, 0xbe, 0x90, 0x1c, 0x17, 0x7b, 0x62, 0x4a, 0x4a, 0x51, 0x6a, 0x71, 0xb1,
	0x04, 0x93, 0x02, 0xa3, 0x06, 0xa7, 0x13, 0xcb, 0x84, 0xad, 0x12, 0x0c, 0x41, 0x30, 0x41, 0x2d,
	0x19, 0x2e, 0x76, 0x77, 0x57, 0xff, 0x90, 0xca, 0x82, 0x54, 0x21, 0x41, 0x2e, 0x5e, 0x77, 0x57,
	0xff, 0xf8, 0x90, 0xc8, 0x00, 0xd7, 0x78, 0x47, 0x17, 0x97, 0x20, 0x01, 0x06, 0x2b, 0x17, 0x2e,
	0x8e, 0xf4, 0xd4, 0xfc, 0xf8, 0x12, 0x90, 0xb4, 0xac, 0x1e, 0xc4, 0x69, 0x7a, 0x30, 0xa7, 0xe9,
	0xb9, 0x65, 0xa6, 0xe6, 0xa4, 0xf8, 0x17, 0x94, 0x64, 0xe6, 0xe7, 0x15, 0x4b, 0x5c, 0x6a, 0x63,
	0x56, 0x60, 0xd4, 0xe0, 0x33, 0xe2, 0xd0, 0x83, 0x9a, 0x17, 0xc4, 0x9e, 0x9e, 0x9a, 0x0f, 0x62,
	0x24, 0xb1, 0x81, 0x75, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xdb, 0xbc, 0x68, 0x95, 0xe8,
	0x00, 0x00, 0x00,
}
